{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\r\nimport iziToast from \"izitoast\";\r\nimport 'izitoast/dist/css/izitoast.min.css';\r\n\r\nconst btn = document.querySelector(\"[data-start]\");\r\nconst daysUI = document.querySelector(\"[data-days]\");\r\nconst hoursUI = document.querySelector(\"[data-hours]\");\r\nconst minutesUI = document.querySelector(\"[data-minutes]\");\r\nconst secondsUI = document.querySelector(\"[data-seconds]\");\r\nlet userSelectedDate = new Date(0);\r\nlet time = 0;\r\nlet intervalID;\r\nconst options = {\r\n  enableTime: true,\r\n  time_24hr: true,\r\n  defaultDate: new Date(),\r\n  minuteIncrement: 1,\r\n  onClose(selectedDates) {\r\n    userSelectedDate = selectedDates[0];\r\n    const date = new Date();\r\n    if (date.getTime() > userSelectedDate.getTime()) {\r\n      clearInterval(intervalID);\r\n      resetTimer();\r\n      btn.setAttribute(\"disabled\", \"\");\r\n      iziToast.error({\r\n        title: 'Caution',\r\n        message: 'You forgot important data',\r\n        position: 'topRight',\r\n      });\r\n    } else {\r\n      clearInterval(intervalID);\r\n      resetTimer();\r\n      btn.removeAttribute(\"disabled\");\r\n      time = userSelectedDate.getTime() - date.getTime();\r\n    }\r\n  },\r\n};\r\nbtn.setAttribute(\"disabled\", \"\");\r\nflatpickr(\"#datetime-picker\", options);\r\nfunction convertMs(ms) {\r\n  const second = 1000;\r\n  const minute = second * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n\r\n  const days = Math.floor(ms / day);\r\n  const hours = Math.floor((ms % day) / hour);\r\n  const minutes = Math.floor(((ms % day) % hour) / minute);\r\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\r\n\r\n  return { days, hours, minutes, seconds };\r\n}\r\nconst addLeadingZero = (value) => value.toString().padStart(2, \"0\");\r\nconst setTimer = () => {\r\n  const { days, hours, minutes, seconds } = convertMs(time);\r\n  daysUI.textContent = addLeadingZero(days);\r\n  hoursUI.textContent = addLeadingZero(hours);\r\n  minutesUI.textContent = addLeadingZero(minutes);\r\n  secondsUI.textContent = addLeadingZero(seconds);\r\n  time -= 1000;\r\n}\r\nconst resetTimer = () => {\r\n  time = 0;\r\n  setTimer();\r\n}\r\nbtn.addEventListener(\"click\", () => {\r\n  intervalID = setInterval(setTimer, 1000)\r\n})"],"names":["btn","daysUI","hoursUI","minutesUI","secondsUI","userSelectedDate","time","intervalID","options","selectedDates","date","resetTimer","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","setTimer"],"mappings":"sGAIA,MAAMA,EAAM,SAAS,cAAc,cAAc,EAC3CC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACzD,IAAIC,EAAmB,IAAI,KAAK,CAAC,EAC7BC,EAAO,EACPC,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBJ,EAAmBI,EAAc,GACjC,MAAMC,EAAO,IAAI,KACbA,EAAK,QAAO,EAAKL,EAAiB,QAAO,GAC3C,cAAcE,CAAU,EACxBI,IACAX,EAAI,aAAa,WAAY,EAAE,EAC/BY,EAAS,MAAM,CACb,MAAO,UACP,QAAS,4BACT,SAAU,UAClB,CAAO,IAED,cAAcL,CAAU,EACxBI,IACAX,EAAI,gBAAgB,UAAU,EAC9BM,EAAOD,EAAiB,QAAS,EAAGK,EAAK,QAAO,EAEnD,CACH,EACAV,EAAI,aAAa,WAAY,EAAE,EAC/Ba,EAAU,mBAAoBL,CAAO,EACrC,SAASM,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,MAAMC,EAAkBC,GAAUA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAC5DC,EAAW,IAAM,CACrB,KAAM,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUR,CAAI,EACxDL,EAAO,YAAcmB,EAAeJ,CAAI,EACxCd,EAAQ,YAAckB,EAAeH,CAAK,EAC1Cd,EAAU,YAAciB,EAAeF,CAAO,EAC9Cd,EAAU,YAAcgB,EAAeD,CAAO,EAC9Cb,GAAQ,GACV,EACMK,EAAa,IAAM,CACvBL,EAAO,EACPgB,GACF,EACAtB,EAAI,iBAAiB,QAAS,IAAM,CAClCO,EAAa,YAAYe,EAAU,GAAI,CACzC,CAAC"}